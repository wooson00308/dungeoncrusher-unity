using System;using System.Collections.Generic;using UnityEngine;[CreateAssetMenu(fileName = "SkillData", menuName = "Data/SkillData")]public class SkillData : Data{    [field: SerializeField] public Sprite Icon { get; private set; }    public int MaxLevel    {        get        {            if (LevelDatas == null) return 0;            return LevelDatas.Count;        }    }    public SkillLevelData GetSkillLevelData(int level)    {        if (LevelDatas == null || LevelDatas.Count == 0)        {            Debug.LogError($"{Id}�� ���� �� ��ų �����Ͱ� ����ֽ��ϴ�.");            return null;        }        int index = level - 1;        SkillLevelData defaultData = level >= MaxLevel ? LevelDatas[^1] : LevelDatas[0];        if (index >= MaxLevel || index < 0)        {            return defaultData;        }        return LevelDatas[index];    }    [field: SerializeField] private string _defaultPrefabPath = "Skill/Skill";    [Header("스킬프리팹")] [field: SerializeField]    private Skill _prefab;    public Skill Prefab    {        get        {            if (_prefab != null) return _prefab;            var prefab = Resources.Load<Skill>(_defaultPrefabPath);            return prefab;        }    }    [field: SerializeField] public List<SkillLevelData> LevelDatas { get; private set; } = new();}[Serializable]public class SkillLevelData{   [field: Tooltip("AD계수")] [field: SerializeField] public int ADRatio { get; private set; }   [field: Tooltip("AP계수")] [field: SerializeField] public int APRatio { get; private set; }   [field: Tooltip("스킬계수")] [field: SerializeField] public float SkillValue { get; private set; }   [field: Tooltip("스킬소모 마나")][field: SerializeField] public int NeedMp { get; private set; }   [field: Tooltip("스킬 확률")][field: Range(0,100)][field: SerializeField] public int Rate { get; private set; }        [field: TextArea]    [field: SerializeField]    public string Description { get; private set; }    [field: Tooltip("지속 시간")] [field: SerializeField] public float Duration { get; private set; }    [field: Tooltip("스킬 쿨타임")][field: SerializeField] public float Cooltime { get; private set; }    [field: Tooltip("스킬 발동 조건")]    [field: SerializeField]    public List<ConditionData> Conditions { get; private set; } = new();    [field: Tooltip("획득 시")]    [field: SerializeField]    public List<SkillFxEventData> ApplyFxDatas { get; private set; } = new();    [field: Tooltip("발동 조건에 의해 실행 시")]    [field: SerializeField]    public List<SkillFxEventData> UseSkillFxDatas { get; private set; } = new();    [field: Tooltip("제거 시")]    [field: SerializeField]    public List<SkillFxEventData> RemoveFxDatas { get; private set; } = new();}